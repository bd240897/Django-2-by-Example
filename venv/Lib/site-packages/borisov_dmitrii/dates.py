import datetime
from dateutil.relativedelta import relativedelta

def __pars_data_up(date):
  """Переводит строку в объект datetime"""
  if is_date(date):
    year = int(date[0:4])
    month = int(date[4:6])
    day = int(date[6:8])
    return datetime.date(year, month, day)

def __pars_data_down(date_dt):
  """Переводит объект datetime в строку"""
  year = str(date_dt.year)
  month = str(date_dt.month)
  if len(month) == 1:
    month = "0" + month;
  day = str(date_dt.day)
  if len(day) == 1:
    day = "0" + day;
  return year + month + day

def is_date(date: str) -> bool:
  """
  Проверяет является ли дата валидной.
  1 - проверяет тип данных,
  2 - проверяет кол-во дней и месяцев (встроенов в datetime).
  """
  if not isinstance(date, str):
    # raise ValueError('На вход нужно строку')
    return False
  try:
    year = int(date[0:4])
    month = int(date[4:6])
    day = int(date[6:8])
    datetime.date(year, month, day)
  except ValueError:
    # raise ValueError("Неверное количество дней в году или неверный месяц")
    return False

  return True

def add_days(date: str, days: int) -> str:
  """Добавляет days дней к дате date"""
  data_dt = __pars_data_up(date)
  delta = datetime.timedelta(days = days)
  result_data_dt = data_dt + delta
  return __pars_data_down(result_data_dt)

def tomorrow(date: str) -> str:
  """Добавляет +1 день к дате date"""
  return add_days(date, 1)

def yesterday(date: str) -> str:
  """Добавляет -1 день к дате date"""
  return add_days(date, -1)

def add_weeks(date: str, weeks: int) -> str:
  """Добавляет weeks недель к дате date"""
  return add_days(date, 7*weeks)

def add_months(date: str, months: int) -> str:
  """
  Добавляет months месяцов к дате date.
  Добавление идет не по дням а по месяцам с приведением дней.
  """
  data_dt = __pars_data_up(date)
  delta = relativedelta(months=months)
  result_data_dt = data_dt + delta
  return __pars_data_down(result_data_dt)

def add_years(date: str, years: int) -> str:
  """
  Добавляет months месяцов к дате date.
  Добавление идет не по дням а по месяцам с приведением дней.
  """
  data_dt = __pars_data_up(date)
  delta = relativedelta(years=years)
  result_data_dt = data_dt + delta
  return __pars_data_down(result_data_dt)
